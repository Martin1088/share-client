/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables.records;


import de.samply.share.client.model.db.tables.Document;

import java.util.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Users can upload (modified) export files in order to track what they may 
 * have sent to other people
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentRecord extends UpdatableRecordImpl<DocumentRecord> implements Record7<Integer, Integer, Integer, Date, String, String, byte[]> {

    private static final long serialVersionUID = -2031351721;

    /**
     * Setter for <code>samply.document.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>samply.document.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>samply.document.inquiry_id</code>.
     */
    public void setInquiryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>samply.document.inquiry_id</code>.
     */
    public Integer getInquiryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>samply.document.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>samply.document.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>samply.document.uploaded_at</code>.
     */
    public void setUploadedAt(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>samply.document.uploaded_at</code>.
     */
    public Date getUploadedAt() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>samply.document.filetype</code>.
     */
    public void setFiletype(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>samply.document.filetype</code>.
     */
    public String getFiletype() {
        return (String) get(4);
    }

    /**
     * Setter for <code>samply.document.filename</code>.
     */
    public void setFilename(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>samply.document.filename</code>.
     */
    public String getFilename() {
        return (String) get(5);
    }

    /**
     * Setter for <code>samply.document.data</code>.
     */
    public void setData(byte... value) {
        set(6, value);
    }

    /**
     * Getter for <code>samply.document.data</code>.
     */
    public byte[] getData() {
        return (byte[]) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Date, String, String, byte[]> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Date, String, String, byte[]> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Document.DOCUMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Document.DOCUMENT.INQUIRY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Document.DOCUMENT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Document.DOCUMENT.UPLOADED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Document.DOCUMENT.FILETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Document.DOCUMENT.FILENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field7() {
        return Document.DOCUMENT.DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getInquiryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getUploadedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getFiletype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value7() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value2(Integer value) {
        setInquiryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value4(Date value) {
        setUploadedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value5(String value) {
        setFiletype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value6(String value) {
        setFilename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value7(byte... value) {
        setData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord values(Integer value1, Integer value2, Integer value3, Date value4, String value5, String value6, byte[] value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentRecord
     */
    public DocumentRecord() {
        super(Document.DOCUMENT);
    }

    /**
     * Create a detached, initialised DocumentRecord
     */
    public DocumentRecord(Integer id, Integer inquiryId, Integer userId, Date uploadedAt, String filetype, String filename, byte[] data) {
        super(Document.DOCUMENT);

        set(0, id);
        set(1, inquiryId);
        set(2, userId);
        set(3, uploadedAt);
        set(4, filetype);
        set(5, filename);
        set(6, data);
    }
}
