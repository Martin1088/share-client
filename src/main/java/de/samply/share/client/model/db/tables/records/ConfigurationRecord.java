/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables.records;


import de.samply.share.client.model.db.tables.Configuration;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigurationRecord extends UpdatableRecordImpl<ConfigurationRecord> implements Record3<String, String, Boolean> {

    private static final long serialVersionUID = 2094899357;

    /**
     * Setter for <code>samply.configuration.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>samply.configuration.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>samply.configuration.setting</code>.
     */
    public void setSetting(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>samply.configuration.setting</code>.
     */
    public String getSetting() {
        return (String) get(1);
    }

    /**
     * Setter for <code>samply.configuration.visible</code>. Is this visible on the web interface?
     */
    public void setVisible(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>samply.configuration.visible</code>. Is this visible on the web interface?
     */
    public Boolean getVisible() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Boolean> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Configuration.CONFIGURATION.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Configuration.CONFIGURATION.SETTING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return Configuration.CONFIGURATION.VISIBLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSetting();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getVisible();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigurationRecord value1(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigurationRecord value2(String value) {
        setSetting(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigurationRecord value3(Boolean value) {
        setVisible(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigurationRecord values(String value1, String value2, Boolean value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConfigurationRecord
     */
    public ConfigurationRecord() {
        super(Configuration.CONFIGURATION);
    }

    /**
     * Create a detached, initialised ConfigurationRecord
     */
    public ConfigurationRecord(String name, String setting, Boolean visible) {
        super(Configuration.CONFIGURATION);

        set(0, name);
        set(1, setting);
        set(2, visible);
    }
}
