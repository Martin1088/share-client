/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables;


import de.samply.share.client.model.db.Keys;
import de.samply.share.client.model.db.Samply;
import de.samply.share.client.model.db.tables.records.JobScheduleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * For regularly executed tasks, set the cron schedule expression here
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobSchedule extends TableImpl<JobScheduleRecord> {

    private static final long serialVersionUID = 1475957349;

    /**
     * The reference instance of <code>samply.job_schedule</code>
     */
    public static final JobSchedule JOB_SCHEDULE = new JobSchedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobScheduleRecord> getRecordType() {
        return JobScheduleRecord.class;
    }

    /**
     * The column <code>samply.job_schedule.id</code>.
     */
    public final TableField<JobScheduleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('samply.job_schedule_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>samply.job_schedule.job_key</code>.
     */
    public final TableField<JobScheduleRecord, String> JOB_KEY = createField("job_key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>samply.job_schedule.cron_expression</code>.
     */
    public final TableField<JobScheduleRecord, String> CRON_EXPRESSION = createField("cron_expression", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>samply.job_schedule.paused</code>.
     */
    public final TableField<JobScheduleRecord, Boolean> PAUSED = createField("paused", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>samply.job_schedule</code> table reference
     */
    public JobSchedule() {
        this("job_schedule", null);
    }

    /**
     * Create an aliased <code>samply.job_schedule</code> table reference
     */
    public JobSchedule(String alias) {
        this(alias, JOB_SCHEDULE);
    }

    private JobSchedule(String alias, Table<JobScheduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobSchedule(String alias, Table<JobScheduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "For regularly executed tasks, set the cron schedule expression here");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Samply.SAMPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JobScheduleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_JOB_SCHEDULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JobScheduleRecord> getPrimaryKey() {
        return Keys.JOB_SCHEDULE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JobScheduleRecord>> getKeys() {
        return Arrays.<UniqueKey<JobScheduleRecord>>asList(Keys.JOB_SCHEDULE_PKEY, Keys.JOB_SCHEDULE_JOB_KEY_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobSchedule as(String alias) {
        return new JobSchedule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobSchedule rename(String name) {
        return new JobSchedule(name, null);
    }
}
