/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.enums;


import de.samply.share.client.model.db.Samply;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.EnumType;
import org.jooq.Schema;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public enum EventMessageType implements EnumType {

    E_SYSTEM_STARTUP("E_SYSTEM_STARTUP"),

    E_SYSTEM_SHUTDOWN("E_SYSTEM_SHUTDOWN"),

    E_NEW_INQUIRY_RECEIVED("E_NEW_INQUIRY_RECEIVED"),

    E_NEW_INQUIRY_CREATED_FOR_UPLOAD("E_NEW_INQUIRY_CREATED_FOR_UPLOAD"),

    E_COULD_NOT_GET_RESULT("E_COULD_NOT_GET_RESULT"),

    E_RESULT_EMPTY("E_RESULT_EMPTY"),

    E_START_EXECUTE_INQUIRY_JOB("E_START_EXECUTE_INQUIRY_JOB"),

    E_REPEAT_EXECUTE_INQUIRY_JOB_WITHOUT_UNKNOWN_KEYS("E_REPEAT_EXECUTE_INQUIRY_JOB_WITHOUT_UNKNOWN_KEYS"),

    E_INQUIRY_RESULT_AT("E_INQUIRY_RESULT_AT"),

    E_LDM_ERROR("E_LDM_ERROR"),

    E_STATISTICS_READY("E_STATISTICS_READY"),

    E_INQUIRY_ARCHIVED("E_INQUIRY_ARCHIVED"),

    E_BROKER_REPLY_ERROR("E_BROKER_REPLY_ERROR"),

    E_STATUS_CHECK_ABANDONED("E_STATUS_CHECK_ABANDONED"),

    E_ARCHIVE_INQUIRY_AFTER_THRESHOLD("E_ARCHIVE_INQUIRY_AFTER_THRESHOLD"),

    E_ARCHIVE_INQUIRY_RESULT_UNAVAILABLE("E_ARCHIVE_INQUIRY_RESULT_UNAVAILABLE"),

    E_RESULT_NOT_SET_ABORTING("E_RESULT_NOT_SET_ABORTING"),

    E_FAILED_JAXB_ERROR("E_FAILED_JAXB_ERROR"),

    E_REPLY_SENT_TO_BROKER("E_REPLY_SENT_TO_BROKER"),

    E_DRYRUN_COMPLETE("E_DRYRUN_COMPLETE"),

    E_UPLOAD_COMPLETE("E_UPLOAD_COMPLETE"),

    E_DELETE_ANONYMIZED_PATIENTS("E_DELETE_ANONYMIZED_PATIENTS"),

    E_CENTRALSEARCH_COULD_NOT_CONNECT("E_CENTRALSEARCH_COULD_NOT_CONNECT"),

    E_UPLOADSTATS_UNPARSABLE("E_UPLOADSTATS_UNPARSABLE"),

    E_UPLOAD_SET_TIMESTAMP("E_UPLOAD_SET_TIMESTAMP"),

    E_PATIENT_UPLOAD_RESULT("E_PATIENT_UPLOAD_RESULT"),

    E_UNAUTHORIZED_ATTEMPT_TO_ACCESS_ADMIN_AREA("E_UNAUTHORIZED_ATTEMPT_TO_ACCESS_ADMIN_AREA"),

    E_USER_CREATED("E_USER_CREATED"),

    E_USER_DELETED("E_USER_DELETED"),

    E_NO_CREDENTIALS_CS("E_NO_CREDENTIALS_CS"),

    E_NO_PREVIOUS_UPLOADS("E_NO_PREVIOUS_UPLOADS"),

    E_PREVIOUS_UPLOAD_AT("E_PREVIOUS_UPLOAD_AT"),

    E_CS_ERROR_LASTUPLOADTIMESTAMP("E_CS_ERROR_LASTUPLOADTIMESTAMP");

    private final String literal;

    private EventMessageType(String literal) {
        this.literal = literal;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return getSchema() == null ? null : getSchema().getCatalog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Samply.SAMPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getName() {
        return "event_message_type";
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getLiteral() {
        return literal;
    }
}
