/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables;


import de.samply.share.client.model.db.Keys;
import de.samply.share.client.model.db.Samply;
import de.samply.share.client.model.db.tables.records.ConfigurationTimingsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Use an extra table for timing parameters for the sake of simply using integers
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigurationTimings extends TableImpl<ConfigurationTimingsRecord> {

    private static final long serialVersionUID = 775656057;

    /**
     * The reference instance of <code>samply.configuration_timings</code>
     */
    public static final ConfigurationTimings CONFIGURATION_TIMINGS = new ConfigurationTimings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigurationTimingsRecord> getRecordType() {
        return ConfigurationTimingsRecord.class;
    }

    /**
     * The column <code>samply.configuration_timings.name</code>.
     */
    public final TableField<ConfigurationTimingsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>samply.configuration_timings.setting</code>.
     */
    public final TableField<ConfigurationTimingsRecord, Integer> SETTING = createField("setting", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>samply.configuration_timings.visible</code>.
     */
    public final TableField<ConfigurationTimingsRecord, Boolean> VISIBLE = createField("visible", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>samply.configuration_timings</code> table reference
     */
    public ConfigurationTimings() {
        this("configuration_timings", null);
    }

    /**
     * Create an aliased <code>samply.configuration_timings</code> table reference
     */
    public ConfigurationTimings(String alias) {
        this(alias, CONFIGURATION_TIMINGS);
    }

    private ConfigurationTimings(String alias, Table<ConfigurationTimingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigurationTimings(String alias, Table<ConfigurationTimingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Use an extra table for timing parameters for the sake of simply using integers");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Samply.SAMPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigurationTimingsRecord> getPrimaryKey() {
        return Keys.CONFIGURATION_TIMINGS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigurationTimingsRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigurationTimingsRecord>>asList(Keys.CONFIGURATION_TIMINGS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigurationTimings as(String alias) {
        return new ConfigurationTimings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigurationTimings rename(String name) {
        return new ConfigurationTimings(name, null);
    }
}
