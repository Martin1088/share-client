/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables.daos;


import de.samply.share.client.model.db.enums.AuthSchemeType;
import de.samply.share.client.model.db.enums.TargetType;
import de.samply.share.client.model.db.tables.Credentials;
import de.samply.share.client.model.db.tables.records.CredentialsRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * Stored credentials for central search,  searchbrokers, local datamanagement...
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CredentialsDao extends DAOImpl<CredentialsRecord, de.samply.share.client.model.db.tables.pojos.Credentials, Integer> {

    /**
     * Create a new CredentialsDao without any configuration
     */
    public CredentialsDao() {
        super(Credentials.CREDENTIALS, de.samply.share.client.model.db.tables.pojos.Credentials.class);
    }

    /**
     * Create a new CredentialsDao with an attached configuration
     */
    public CredentialsDao(Configuration configuration) {
        super(Credentials.CREDENTIALS, de.samply.share.client.model.db.tables.pojos.Credentials.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(de.samply.share.client.model.db.tables.pojos.Credentials object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.Credentials> fetchById(Integer... values) {
        return fetch(Credentials.CREDENTIALS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.samply.share.client.model.db.tables.pojos.Credentials fetchOneById(Integer value) {
        return fetchOne(Credentials.CREDENTIALS.ID, value);
    }

    /**
     * Fetch records that have <code>auth_scheme IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.Credentials> fetchByAuthScheme(AuthSchemeType... values) {
        return fetch(Credentials.CREDENTIALS.AUTH_SCHEME, values);
    }

    /**
     * Fetch records that have <code>target IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.Credentials> fetchByTarget(TargetType... values) {
        return fetch(Credentials.CREDENTIALS.TARGET, values);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.Credentials> fetchByUsername(String... values) {
        return fetch(Credentials.CREDENTIALS.USERNAME, values);
    }

    /**
     * Fetch records that have <code>passcode IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.Credentials> fetchByPasscode(String... values) {
        return fetch(Credentials.CREDENTIALS.PASSCODE, values);
    }

    /**
     * Fetch records that have <code>workstation IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.Credentials> fetchByWorkstation(String... values) {
        return fetch(Credentials.CREDENTIALS.WORKSTATION, values);
    }

    /**
     * Fetch records that have <code>domain IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.Credentials> fetchByDomain(String... values) {
        return fetch(Credentials.CREDENTIALS.DOMAIN, values);
    }
}
