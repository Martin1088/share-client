/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables.records;


import de.samply.share.client.model.db.enums.BrokerStatusType;
import de.samply.share.client.model.db.tables.Broker;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrokerRecord extends UpdatableRecordImpl<BrokerRecord> implements Record6<Integer, String, String, Timestamp, Integer, BrokerStatusType> {

    private static final long serialVersionUID = 306700729;

    /**
     * Setter for <code>samply.broker.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>samply.broker.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>samply.broker.address</code>. The base URL of the searchbroker
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>samply.broker.address</code>. The base URL of the searchbroker
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>samply.broker.name</code>. A self-assigned name of the searchbroker (e.g. "Decentral Searchbroker for DKTK")
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>samply.broker.name</code>. A self-assigned name of the searchbroker (e.g. "Decentral Searchbroker for DKTK")
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>samply.broker.last_checked</code>. When was this searchbroker queries the last time?
     */
    public void setLastChecked(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>samply.broker.last_checked</code>. When was this searchbroker queries the last time?
     */
    public Timestamp getLastChecked() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>samply.broker.credentials_id</code>.
     */
    public void setCredentialsId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>samply.broker.credentials_id</code>.
     */
    public Integer getCredentialsId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>samply.broker.status</code>.
     */
    public void setStatus(BrokerStatusType value) {
        set(5, value);
    }

    /**
     * Getter for <code>samply.broker.status</code>.
     */
    public BrokerStatusType getStatus() {
        return (BrokerStatusType) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, Timestamp, Integer, BrokerStatusType> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, Timestamp, Integer, BrokerStatusType> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Broker.BROKER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Broker.BROKER.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Broker.BROKER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Broker.BROKER.LAST_CHECKED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Broker.BROKER.CREDENTIALS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BrokerStatusType> field6() {
        return Broker.BROKER.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getLastChecked();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getCredentialsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerStatusType value6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerRecord value2(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerRecord value4(Timestamp value) {
        setLastChecked(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerRecord value5(Integer value) {
        setCredentialsId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerRecord value6(BrokerStatusType value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokerRecord values(Integer value1, String value2, String value3, Timestamp value4, Integer value5, BrokerStatusType value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BrokerRecord
     */
    public BrokerRecord() {
        super(Broker.BROKER);
    }

    /**
     * Create a detached, initialised BrokerRecord
     */
    public BrokerRecord(Integer id, String address, String name, Timestamp lastChecked, Integer credentialsId, BrokerStatusType status) {
        super(Broker.BROKER);

        set(0, id);
        set(1, address);
        set(2, name);
        set(3, lastChecked);
        set(4, credentialsId);
        set(5, status);
    }
}
