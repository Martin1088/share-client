/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables;


import de.samply.share.client.model.db.Keys;
import de.samply.share.client.model.db.Samply;
import de.samply.share.client.model.db.tables.records.UserNotificationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Which user shall receive which notifications?
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserNotification extends TableImpl<UserNotificationRecord> {

    private static final long serialVersionUID = -1332711522;

    /**
     * The reference instance of <code>samply.user_notification</code>
     */
    public static final UserNotification USER_NOTIFICATION = new UserNotification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserNotificationRecord> getRecordType() {
        return UserNotificationRecord.class;
    }

    /**
     * The column <code>samply.user_notification.user_id</code>.
     */
    public final TableField<UserNotificationRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>samply.user_notification.requested_entity_id</code>.
     */
    public final TableField<UserNotificationRecord, Integer> REQUESTED_ENTITY_ID = createField("requested_entity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>samply.user_notification</code> table reference
     */
    public UserNotification() {
        this("user_notification", null);
    }

    /**
     * Create an aliased <code>samply.user_notification</code> table reference
     */
    public UserNotification(String alias) {
        this(alias, USER_NOTIFICATION);
    }

    private UserNotification(String alias, Table<UserNotificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserNotification(String alias, Table<UserNotificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Which user shall receive which notifications?");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Samply.SAMPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserNotificationRecord> getPrimaryKey() {
        return Keys.USER_NOTIFICATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserNotificationRecord>> getKeys() {
        return Arrays.<UniqueKey<UserNotificationRecord>>asList(Keys.USER_NOTIFICATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserNotificationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserNotificationRecord, ?>>asList(Keys.USER_NOTIFICATION__USER_NOTIFICATION_USER_ID_FKEY, Keys.USER_NOTIFICATION__USER_NOTIFICATION_REQUESTED_ENTITY_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserNotification as(String alias) {
        return new UserNotification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserNotification rename(String name) {
        return new UserNotification(name, null);
    }
}
