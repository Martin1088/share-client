/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables.daos;


import de.samply.share.client.model.db.enums.EntityType;
import de.samply.share.client.model.db.tables.RequestedEntity;
import de.samply.share.client.model.db.tables.records.RequestedEntityRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * An inquirer can request different types of entities (biomaterial, clinical 
 * data...)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestedEntityDao extends DAOImpl<RequestedEntityRecord, de.samply.share.client.model.db.tables.pojos.RequestedEntity, Integer> {

    /**
     * Create a new RequestedEntityDao without any configuration
     */
    public RequestedEntityDao() {
        super(RequestedEntity.REQUESTED_ENTITY, de.samply.share.client.model.db.tables.pojos.RequestedEntity.class);
    }

    /**
     * Create a new RequestedEntityDao with an attached configuration
     */
    public RequestedEntityDao(Configuration configuration) {
        super(RequestedEntity.REQUESTED_ENTITY, de.samply.share.client.model.db.tables.pojos.RequestedEntity.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(de.samply.share.client.model.db.tables.pojos.RequestedEntity object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.RequestedEntity> fetchById(Integer... values) {
        return fetch(RequestedEntity.REQUESTED_ENTITY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.samply.share.client.model.db.tables.pojos.RequestedEntity fetchOneById(Integer value) {
        return fetchOne(RequestedEntity.REQUESTED_ENTITY.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<de.samply.share.client.model.db.tables.pojos.RequestedEntity> fetchByName(EntityType... values) {
        return fetch(RequestedEntity.REQUESTED_ENTITY.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public de.samply.share.client.model.db.tables.pojos.RequestedEntity fetchOneByName(EntityType value) {
        return fetchOne(RequestedEntity.REQUESTED_ENTITY.NAME, value);
    }
}
