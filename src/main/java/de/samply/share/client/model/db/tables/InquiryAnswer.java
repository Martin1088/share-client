/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables;


import de.samply.share.client.model.db.Keys;
import de.samply.share.client.model.db.Samply;
import de.samply.share.client.model.db.tables.records.InquiryAnswerRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InquiryAnswer extends TableImpl<InquiryAnswerRecord> {

    private static final long serialVersionUID = -1281037137;

    /**
     * The reference instance of <code>samply.inquiry_answer</code>
     */
    public static final InquiryAnswer INQUIRY_ANSWER = new InquiryAnswer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InquiryAnswerRecord> getRecordType() {
        return InquiryAnswerRecord.class;
    }

    /**
     * The column <code>samply.inquiry_answer.id</code>.
     */
    public final TableField<InquiryAnswerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('samply.inquiry_answer_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>samply.inquiry_answer.inquiry_details_id</code>. which revision of the inquiry was answered?
     */
    public final TableField<InquiryAnswerRecord, Integer> INQUIRY_DETAILS_ID = createField("inquiry_details_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "which revision of the inquiry was answered?");

    /**
     * The column <code>samply.inquiry_answer.sent_at</code>.
     */
    public final TableField<InquiryAnswerRecord, Timestamp> SENT_AT = createField("sent_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>samply.inquiry_answer.content</code>. What was sent? This may contain different types of data...use json to keep it generic
     */
    public final TableField<InquiryAnswerRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "What was sent? This may contain different types of data...use json to keep it generic");

    /**
     * Create a <code>samply.inquiry_answer</code> table reference
     */
    public InquiryAnswer() {
        this("inquiry_answer", null);
    }

    /**
     * Create an aliased <code>samply.inquiry_answer</code> table reference
     */
    public InquiryAnswer(String alias) {
        this(alias, INQUIRY_ANSWER);
    }

    private InquiryAnswer(String alias, Table<InquiryAnswerRecord> aliased) {
        this(alias, aliased, null);
    }

    private InquiryAnswer(String alias, Table<InquiryAnswerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Samply.SAMPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InquiryAnswerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INQUIRY_ANSWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InquiryAnswerRecord> getPrimaryKey() {
        return Keys.INQUIRY_ANSWER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InquiryAnswerRecord>> getKeys() {
        return Arrays.<UniqueKey<InquiryAnswerRecord>>asList(Keys.INQUIRY_ANSWER_PKEY, Keys.INQUIRY_ANSWER_INQUIRY_DETAILS_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InquiryAnswerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InquiryAnswerRecord, ?>>asList(Keys.INQUIRY_ANSWER__INQUIRY_ANSWER_INQUIRY_DETAILS_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InquiryAnswer as(String alias) {
        return new InquiryAnswer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InquiryAnswer rename(String name) {
        return new InquiryAnswer(name, null);
    }
}
