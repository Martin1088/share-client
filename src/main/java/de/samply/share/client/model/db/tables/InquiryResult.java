/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables;


import de.samply.share.client.model.db.Keys;
import de.samply.share.client.model.db.Samply;
import de.samply.share.client.model.db.tables.records.InquiryResultRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InquiryResult extends TableImpl<InquiryResultRecord> {

    private static final long serialVersionUID = 1368490385;

    /**
     * The reference instance of <code>samply.inquiry_result</code>
     */
    public static final InquiryResult INQUIRY_RESULT = new InquiryResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InquiryResultRecord> getRecordType() {
        return InquiryResultRecord.class;
    }

    /**
     * The column <code>samply.inquiry_result.id</code>.
     */
    public final TableField<InquiryResultRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('samply.inquiry_result_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>samply.inquiry_result.inquiry_details_id</code>.
     */
    public final TableField<InquiryResultRecord, Integer> INQUIRY_DETAILS_ID = createField("inquiry_details_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>samply.inquiry_result.is_error</code>.
     */
    public final TableField<InquiryResultRecord, Boolean> IS_ERROR = createField("is_error", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>samply.inquiry_result.location</code>. The URL where the result can be found
     */
    public final TableField<InquiryResultRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.CLOB, this, "The URL where the result can be found");

    /**
     * The column <code>samply.inquiry_result.size</code>.
     */
    public final TableField<InquiryResultRecord, Integer> SIZE = createField("size", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>samply.inquiry_result.executed_at</code>.
     */
    public final TableField<InquiryResultRecord, Timestamp> EXECUTED_AT = createField("executed_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>samply.inquiry_result.valid_until</code>.
     */
    public final TableField<InquiryResultRecord, Timestamp> VALID_UNTIL = createField("valid_until", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>samply.inquiry_result.statistics_only</code>.
     */
    public final TableField<InquiryResultRecord, Boolean> STATISTICS_ONLY = createField("statistics_only", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>samply.inquiry_result.notification_sent</code>. has the user been notified about this inquiry?
     */
    public final TableField<InquiryResultRecord, Boolean> NOTIFICATION_SENT = createField("notification_sent", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "has the user been notified about this inquiry?");

    /**
     * The column <code>samply.inquiry_result.error_code</code>.
     */
    public final TableField<InquiryResultRecord, String> ERROR_CODE = createField("error_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>samply.inquiry_result</code> table reference
     */
    public InquiryResult() {
        this("inquiry_result", null);
    }

    /**
     * Create an aliased <code>samply.inquiry_result</code> table reference
     */
    public InquiryResult(String alias) {
        this(alias, INQUIRY_RESULT);
    }

    private InquiryResult(String alias, Table<InquiryResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private InquiryResult(String alias, Table<InquiryResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Samply.SAMPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InquiryResultRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INQUIRY_RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InquiryResultRecord> getPrimaryKey() {
        return Keys.INQUIRY_RESULT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InquiryResultRecord>> getKeys() {
        return Arrays.<UniqueKey<InquiryResultRecord>>asList(Keys.INQUIRY_RESULT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InquiryResultRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InquiryResultRecord, ?>>asList(Keys.INQUIRY_RESULT__INQUIRY_RESULT_INQUIRY_DETAILS_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InquiryResult as(String alias) {
        return new InquiryResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InquiryResult rename(String name) {
        return new InquiryResult(name, null);
    }
}
