/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables.records;


import de.samply.share.client.model.db.enums.AuthSchemeType;
import de.samply.share.client.model.db.enums.TargetType;
import de.samply.share.client.model.db.tables.Credentials;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Stored credentials for central search,  searchbrokers, local datamanagement...
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CredentialsRecord extends UpdatableRecordImpl<CredentialsRecord> implements Record7<Integer, AuthSchemeType, TargetType, String, String, String, String> {

    private static final long serialVersionUID = -1654587508;

    /**
     * Setter for <code>samply.credentials.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>samply.credentials.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>samply.credentials.auth_scheme</code>.
     */
    public void setAuthScheme(AuthSchemeType value) {
        set(1, value);
    }

    /**
     * Getter for <code>samply.credentials.auth_scheme</code>.
     */
    public AuthSchemeType getAuthScheme() {
        return (AuthSchemeType) get(1);
    }

    /**
     * Setter for <code>samply.credentials.target</code>. proxy? central search? broker? user?
     */
    public void setTarget(TargetType value) {
        set(2, value);
    }

    /**
     * Getter for <code>samply.credentials.target</code>. proxy? central search? broker? user?
     */
    public TargetType getTarget() {
        return (TargetType) get(2);
    }

    /**
     * Setter for <code>samply.credentials.username</code>.
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>samply.credentials.username</code>.
     */
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>samply.credentials.passcode</code>. May be a hashed password for the user login or a plain password for central search or maybe just an apikey
     */
    public void setPasscode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>samply.credentials.passcode</code>. May be a hashed password for the user login or a plain password for central search or maybe just an apikey
     */
    public String getPasscode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>samply.credentials.workstation</code>. Currently not used. Might be relevant for other auth schemes
     */
    public void setWorkstation(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>samply.credentials.workstation</code>. Currently not used. Might be relevant for other auth schemes
     */
    public String getWorkstation() {
        return (String) get(5);
    }

    /**
     * Setter for <code>samply.credentials.domain</code>. Currently not used. Might be relevant for other auth schemes
     */
    public void setDomain(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>samply.credentials.domain</code>. Currently not used. Might be relevant for other auth schemes
     */
    public String getDomain() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, AuthSchemeType, TargetType, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, AuthSchemeType, TargetType, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Credentials.CREDENTIALS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<AuthSchemeType> field2() {
        return Credentials.CREDENTIALS.AUTH_SCHEME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TargetType> field3() {
        return Credentials.CREDENTIALS.TARGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Credentials.CREDENTIALS.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Credentials.CREDENTIALS.PASSCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Credentials.CREDENTIALS.WORKSTATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Credentials.CREDENTIALS.DOMAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthSchemeType value2() {
        return getAuthScheme();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetType value3() {
        return getTarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPasscode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getWorkstation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDomain();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CredentialsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CredentialsRecord value2(AuthSchemeType value) {
        setAuthScheme(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CredentialsRecord value3(TargetType value) {
        setTarget(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CredentialsRecord value4(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CredentialsRecord value5(String value) {
        setPasscode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CredentialsRecord value6(String value) {
        setWorkstation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CredentialsRecord value7(String value) {
        setDomain(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CredentialsRecord values(Integer value1, AuthSchemeType value2, TargetType value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CredentialsRecord
     */
    public CredentialsRecord() {
        super(Credentials.CREDENTIALS);
    }

    /**
     * Create a detached, initialised CredentialsRecord
     */
    public CredentialsRecord(Integer id, AuthSchemeType authScheme, TargetType target, String username, String passcode, String workstation, String domain) {
        super(Credentials.CREDENTIALS);

        set(0, id);
        set(1, authScheme);
        set(2, target);
        set(3, username);
        set(4, passcode);
        set(5, workstation);
        set(6, domain);
    }
}
