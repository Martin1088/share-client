/*
 * This file is generated by jOOQ.
*/
package de.samply.share.client.model.db.tables.records;


import de.samply.share.client.model.db.enums.EntityType;
import de.samply.share.client.model.db.tables.RequestedEntity;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * An inquirer can request different types of entities (biomaterial, clinical 
 * data...)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestedEntityRecord extends UpdatableRecordImpl<RequestedEntityRecord> implements Record2<Integer, EntityType> {

    private static final long serialVersionUID = -1256493830;

    /**
     * Setter for <code>samply.requested_entity.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>samply.requested_entity.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>samply.requested_entity.name</code>.
     */
    public void setName(EntityType value) {
        set(1, value);
    }

    /**
     * Getter for <code>samply.requested_entity.name</code>.
     */
    public EntityType getName() {
        return (EntityType) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, EntityType> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, EntityType> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return RequestedEntity.REQUESTED_ENTITY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<EntityType> field2() {
        return RequestedEntity.REQUESTED_ENTITY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityType value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestedEntityRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestedEntityRecord value2(EntityType value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestedEntityRecord values(Integer value1, EntityType value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RequestedEntityRecord
     */
    public RequestedEntityRecord() {
        super(RequestedEntity.REQUESTED_ENTITY);
    }

    /**
     * Create a detached, initialised RequestedEntityRecord
     */
    public RequestedEntityRecord(Integer id, EntityType name) {
        super(RequestedEntity.REQUESTED_ENTITY);

        set(0, id);
        set(1, name);
    }
}
